<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.9.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="flujo-generacion-contenido">
		<http:listener config-ref="HTTP_colciencias_Configuration"
			path="/flujoGeneracionContenido" doc:name="HTTP" />
		<cxf:jaxws-service doc:name="flujoGeneracionContenido"
			service="generacionContenidoService" serviceClass="co.com.ic2.colciencias.ws.IServiceGeneracionContenido" />
		<choice doc:name="Choice">
			<!-- Generacion contenidos impresos -->
			<when
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarClasificacionGeneracionContenidosImpresos'"
				evaluator="groovy">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select c_categoria, count(c_categoria) numero from(
						select gci.k_codigo,gci.c_categoria from gen_cont_impreso gci, 
						gen_cont_impreso_autor gcia
						where gci.k_codigo=gcia.i_cod_gen_contenido
						and gcia.i_cod_grupo_investigacion=#[codigoGrupo]
						group by gci.k_codigo) as gen_cont_impreso_grupo
						group by c_categoria]]></db:parameterized-query>
					</db:select>
					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarGeneracionContenidosImpresos'">
				<processor-chain doc:name="Processor Chain">
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from gen_cont_impreso]]></db:parameterized-query>
					</db:select>
					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.TransformerGeneracionContenido.getGeneracionContenidosImpresos(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarGeneracionContenidosImpresosGrupo'">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from gen_cont_impreso ci,gen_contenido_autor ca where ci.k_codigo=ca.i_cod_gen_contenido and ca.i_cod_grupo_investigacion=#[codigoGrupo]]]></db:parameterized-query>
					</db:select>

					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.TransformerGeneracionContenido.getGeneracionContenidosImpresos(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarGeneracionContenidoImpreso'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="nombre"
						value="#[payload[1]]" doc:name="Session Variable" />
					<set-session-variable variableName="fechaPublicacion"
						value="#[payload[2]]" doc:name="Session Variable" />
					<set-session-variable variableName="medioCirculacion"
						value="#[payload[3]]" doc:name="Session Variable" />
					<set-session-variable variableName="ambito"
						value="#[payload[4]]" doc:name="Session Variable" />
					<set-session-variable variableName="lugarPublicacion"
						value="#[payload[5]]" doc:name="Session Variable" />
					<set-session-variable variableName="certificacion"
						value="#[payload[6]]" doc:name="Session Variable" />
					<set-session-variable variableName="categoria"
						value="#[payload[7]]" doc:name="Session Variable" />
					<set-session-variable variableName="clasificado"
						value="#[payload[8]]" doc:name="Session Variable" />
					<db:insert config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[insert into gen_cont_impreso (k_codigo,n_titulo,f_fecha_publicacion,n_medio_circulacion,
	                        n_ambito,i_lugar_publicacion,b_certificacion,c_categoria,b_clasificado) values(#[codigo],#[nombre],#[fechaPublicacion],
	                        #[medioCirculacion],#[ambito],#[lugarPublicacion],#[certificacion],#[categoria],#[clasificado]])]]></db:parameterized-query>
					</db:insert>
				</processor-chain>
			</when>

			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarGeneracionContenidosImpresos'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigoGrupo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="contenidosImpresos"
						value="#[payload[1]]" doc:name="Session Variable" />

					<foreach collection="contenidosImpresos" doc:name="For Each"
						counterVariableName="i" rootMessageVariableName="contenidoImpreso">
						<set-variable variableName="contenidoImpreso"
							value="#[contenidosImpresos[i-1]]" doc:name="Session Variable" />

						<logger message="#[contenidosImpresos[i-1].nombre]" level="INFO"
							doc:name="Logger" />

						<db:insert config-ref="MySQL_Configuration"
							autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
							doc:name="Database">
							<db:parameterized-query><![CDATA[insert into gen_cont_impreso (n_titulo,i_ano_publicacion,n_medio_circulacion,n_ambito,
	                        n_lugar_publicacion,b_certificacion,c_categoria,b_clasificado) values(#[contenidoImpreso.nombre],#[contenidoImpreso.ano],
	                        #[contenidoImpreso.medioCirculacion],#[contenidoImpreso.ambito],#[contenidoImpreso.lugarPublicacion],#[contenidoImpreso.certificacion],#[contenidoImpreso.categoria],#[contenidoImpreso.clasificado])]]></db:parameterized-query>
						</db:insert>
						<logger message="#[payload]" level="INFO" doc:name="Logger" />
						<set-variable variableName="codigoContenidoImpreso"
							value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
						<logger
							message="Codigo contenido impreso generado #[codigoContenidoImpreso]"
							level="INFO" doc:name="Logger" />

						<set-variable variableName="autores"
							value="#[contenidosImpresos[i-1].autores]" doc:name="Variable" />
						<choice doc:name="Choice">
							<when expression="#[contenidosImpresos[i-1].autores == empty]">
								<logger message="No existen autores" level="INFO"
									doc:name="Logger" />

								<db:insert config-ref="MySQL_Configuration"
									autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
									doc:name="Database">
									<db:parameterized-query><![CDATA[insert into gen_cont_impreso_autor (i_cod_gen_contenido,i_cod_grupo_investigacion) values(#[codigoContenidoImpreso],#[codigoGrupo])]]></db:parameterized-query>
								</db:insert>
							</when>
							<otherwise>
								<foreach collection="autores" doc:name="For Each"
									counterVariableName="j" rootMessageVariableName="articulo">
									<set-variable variableName="autor" value="#[autores[j-1]]"
										doc:name="Variable" />

									<logger message="#[autor.nombreCompleto]" level="INFO"
										doc:name="Logger" />

									<db:select config-ref="MySQL_Configuration" doc:name="Database">
										<db:parameterized-query><![CDATA[select k_codigo from investigador where n_nombre=#[autor.nombreCompleto]]]></db:parameterized-query>
									</db:select>

									<logger message="#[payload]" level="INFO" doc:name="Logger" />

									<choice doc:name="Choice">
										<when expression="#[payload.size() ==0]">
											<logger message="no existe investigador" level="INFO"
												doc:name="Logger" />
											<db:insert config-ref="MySQL_Configuration"
												autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
												doc:name="Database">
												<db:parameterized-query><![CDATA[insert into investigador (n_nombre) values(#[autor.nombreCompleto])]]></db:parameterized-query>
											</db:insert>

											<set-variable variableName="idAutor"
												value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
										</when>
										<otherwise>
											<logger message="Investigador #[payload] ya existe"
												level="INFO" doc:name="Logger" />

											<set-variable variableName="idAutor"
												value="#[payload[0].k_codigo]" doc:name="Variable" />
										</otherwise>
									</choice>

									<logger message="#[idAutor]" level="INFO" doc:name="Logger" />

									<db:insert config-ref="MySQL_Configuration"
										autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
										doc:name="Database">
										<db:parameterized-query><![CDATA[insert into gen_cont_impreso_autor (i_cod_gen_contenido,i_cod_investigador,i_cod_grupo_investigacion) values(#[codigoContenidoImpreso],#[idAutor],#[codigoGrupo])]]></db:parameterized-query>
									</db:insert>
								</foreach>
							</otherwise>
						</choice>

					</foreach>

					<mulexml:object-to-xml-transformer
						doc:name="Object to XML" />

				</processor-chain>
			</when>

			<!-- Generacion contenidos multimedia -->
			<when
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarClasificacionGeneracionContenidosMultimedia'"
				evaluator="groovy">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select c_categoria, count(c_categoria) numero from(
						select gcm.k_codigo,gcm.c_categoria from gen_cont_multimedia gcm, 
						gen_cont_multimedia_participante gcmp
						where gcm.k_codigo=gcmp.i_cod_gen_cont_multimedia
						and gcmp.i_cod_grupo_investigacion=#[codigoGrupo]
						group by gcm.k_codigo) as gen_cont_multimedia_grupo
						group by c_categoria]]></db:parameterized-query>
					</db:select>
					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarGeneracionContenidosMultimedia'">
				<processor-chain doc:name="Processor Chain">

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from gen_cont_multimedia]]></db:parameterized-query>
					</db:select>
					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.transformers.TransformerGeneracionContenido.getGeneracionContenidosMultimedia(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarGeneracionContenidosMultimediaGrupo'">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from gen_cont_multimedia cm,gen_cont_multimedia_participante cmp where cm.k_codigo=cmp.i_cod_gen_cont_multimedia and cmp.i_cod_grupo_investigacion=#[codigoGrupo]]]></db:parameterized-query>
					</db:select>

					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.transformers.TransformerGeneracionContenido.getGeneracionContenidosMultimedia(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarGeneracionContenidoMultimedia'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="titulo"
						value="#[payload[1]]" doc:name="Session Variable" />
					<set-session-variable variableName="ambito"
						value="#[payload[2]]" doc:name="Session Variable" />
					<set-session-variable variableName="comunidades"
						value="#[payload[3]]" doc:name="Session Variable" />
					<set-session-variable variableName="resumen"
						value="#[payload[4]]" doc:name="Session Variable" />
					<set-session-variable variableName="fecha"
						value="#[payload[5]]" doc:name="Session Variable" />
					<set-session-variable variableName="medioCirculacion"
						value="#[payload[6]]" doc:name="Session Variable" />
					<set-session-variable variableName="certificacion"
						value="#[payload[6]]" doc:name="Session Variable" />
					<set-session-variable variableName="categoria"
						value="#[payload[7]]" doc:name="Session Variable" />
					<set-session-variable variableName="clasificado"
						value="#[payload[8]]" doc:name="Session Variable" />
					<db:insert config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[insert into gen_cont_multimedia (k_codigo,n_titulo,n_ambito,n_comunidades,n_resumen,
	                        f_fecha,n_medio_circulacion,b_certificacion,c_categoria,b_clasificado) values(#[codigo],#[titulo],#[ambito],
	                        #[comunidades],#[resumen],#[fecha],#[medioCirculacion],#[certificacion],#[categoria],#[clasificado]])]]></db:parameterized-query>
					</db:insert>
				</processor-chain>
			</when>

			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarGeneracionContenidosMultimedia'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigoGrupo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="contenidosMultimedia"
						value="#[payload[1]]" doc:name="Session Variable" />

					<foreach collection="contenidosMultimedia" doc:name="For Each"
						counterVariableName="i" rootMessageVariableName="contenidoMultimedia">
						<set-variable variableName="contenidoMultimedia"
							value="#[contenidosMultimedia[i-1]]" doc:name="Session Variable" />

						<logger message="#[contenidosMultimedia[i-1].nombre]"
							level="INFO" doc:name="Logger" />

						<db:insert config-ref="MySQL_Configuration"
							autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
							doc:name="Database">
							<db:parameterized-query><![CDATA[insert into gen_cont_multimedia (n_titulo,n_ambito,n_comunidades,
	                        n_resumen,f_fecha,n_medio_circulacion,b_certificacion,c_categoria,b_clasificado) values(#[contenidoMultimedia.nombre],#[contenidoMultimedia.ambito],#[contenidoMultimedia.comunidades],
	                        #[contenidoMultimedia.resumen],#[contenidoMultimedia.fecha],#[contenidoMultimedia.medioCirculacion],#[contenidoMultimedia.certificacion],#[contenidoMultimedia.categoria],#[contenidoMultimedia.clasificado])]]></db:parameterized-query>
						</db:insert>
						<logger message="#[payload]" level="INFO" doc:name="Logger" />
						<set-variable variableName="codigoContenidoMultimedia"
							value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
						<logger
							message="Codigo contenido multimedia generado #[codigoContenidoMultimedia]"
							level="INFO" doc:name="Logger" />

						<set-variable variableName="autores"
							value="#[contenidosMultimedia[i-1].autores]" doc:name="Variable" />

						<foreach collection="autores" doc:name="For Each"
							counterVariableName="j" rootMessageVariableName="articulo">
							<set-variable variableName="autor" value="#[autores[j-1]]"
								doc:name="Variable" />

							<logger message="#[autor.nombreCompleto]" level="INFO"
								doc:name="Logger" />

							<db:select config-ref="MySQL_Configuration" doc:name="Database">
								<db:parameterized-query><![CDATA[select k_codigo from investigador where n_nombre=#[autor.nombreCompleto]]]></db:parameterized-query>
							</db:select>

							<logger message="#[payload]" level="INFO" doc:name="Logger" />

							<choice doc:name="Choice">
								<when expression="#[payload.size() ==0]">
									<logger message="no existe investigador" level="INFO"
										doc:name="Logger" />
									<db:insert config-ref="MySQL_Configuration"
										autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
										doc:name="Database">
										<db:parameterized-query><![CDATA[insert into investigador (n_nombre) values(#[autor.nombreCompleto])]]></db:parameterized-query>
									</db:insert>

									<set-variable variableName="idAutor"
										value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
								</when>
								<otherwise>
									<logger message="Investigador #[payload] ya existe"
										level="INFO" doc:name="Logger" />

									<set-variable variableName="idAutor"
										value="#[payload[0].k_codigo]" doc:name="Variable" />
								</otherwise>
							</choice>

							<logger message="#[idAutor]" level="INFO" doc:name="Logger" />

							<db:insert config-ref="MySQL_Configuration"
								autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
								doc:name="Database">
								<db:parameterized-query><![CDATA[insert into gen_cont_multimedia_participante (i_cod_gen_cont_multimedia,i_cod_investigador,i_cod_grupo_investigacion) values(#[codigoContenidoMultimedia],#[idAutor],#[codigoGrupo])]]></db:parameterized-query>
							</db:insert>
						</foreach>

						<set-variable variableName="instituciones"
							value="#[contenidosMultimedia[i-1].instituciones]" doc:name="Variable" />

						<foreach collection="instituciones" doc:name="For Each"
							counterVariableName="j" rootMessageVariableName="institucion">
							<set-variable variableName="institucion" value="#[instituciones[j-1]]"
								doc:name="Variable" />

							<logger message="#[institucion.nombre]" level="INFO"
								doc:name="Logger" />

							<db:select config-ref="MySQL_Configuration" doc:name="Database">
								<db:parameterized-query><![CDATA[select k_codigo from entidad where n_nombre=#[institucion.nombreCompleto]]]></db:parameterized-query>
							</db:select>

							<logger message="#[payload]" level="INFO" doc:name="Logger" />

							<choice doc:name="Choice">
								<when expression="#[payload.size() ==0]">
									<logger message="no existe institucion" level="INFO"
										doc:name="Logger" />
									<db:insert config-ref="MySQL_Configuration"
										autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
										doc:name="Database">
										<db:parameterized-query><![CDATA[insert into entidad (n_nombre,b_institucion) values(#[institucion.nombre],1)]]></db:parameterized-query>
									</db:insert>

									<set-variable variableName="idInstitucion"
										value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
								</when>
								<otherwise>
									<logger message="Institucion #[payload] ya existe"
										level="INFO" doc:name="Logger" />

									<set-variable variableName="idInstitucion"
										value="#[payload[0].k_codigo]" doc:name="Variable" />
								</otherwise>
							</choice>

							<logger message="#[idInstitucion]" level="INFO" doc:name="Logger" />

							<db:insert config-ref="MySQL_Configuration"
								autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
								doc:name="Database">
								<db:parameterized-query><![CDATA[insert into gen_cont_multimedia_entidad (i_cod_gen_cont_multimedia,i_cod_entidad) values(#[codigoContenidoMultimedia],#[idInstitucion])]]></db:parameterized-query>
							</db:insert>
						</foreach>

					</foreach>

					<mulexml:object-to-xml-transformer
						doc:name="Object to XML" />

				</processor-chain>
			</when>

			<!-- Generacion contenidos virtuales -->

			<when
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarClasificacionGeneracionContenidosVirtuales'"
				evaluator="groovy">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select c_categoria, count(c_categoria) numero from(
						select gcv.k_codigo,gcv.c_categoria from gen_cont_virtual gcv, 
						gen_cont_virtual_autor gcva
						where gcv.k_codigo=gcva.i_cod_gen_cont_virtual
						and gcva.i_cod_grupo_investigacion=#[codigoGrupo]
						group by gcv.k_codigo) as gen_cont_virtual_grupo
						group by c_categoria]]></db:parameterized-query>
					</db:select>
					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarGeneracionContenidosVirtuales'">
				<processor-chain doc:name="Processor Chain">
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from gen_cont_virtual]]></db:parameterized-query>
					</db:select>

					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.transformers.TransformerGeneracionContenido.getGeneracionContenidosVirtuales(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />

				</processor-chain>
			</when>

			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarGeneracionContenidosVirtualesGrupo'">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from gen_cont_virtual cv,gen_cont_virtual_autor cva where cv.k_codigo=cva.i_cod_gen_cont_virtual and cva.i_cod_grupo_investigacion=#[codigoGrupo]]]></db:parameterized-query>
					</db:select>

					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.transformers.TransformerGeneracionContenido.getGeneracionContenidosVirtuales(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />

				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarGeneracionContenidoVirtual'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="titulo"
						value="#[payload[1]]" doc:name="Session Variable" />
					<set-session-variable variableName="comunidad"
						value="#[payload[2]]" doc:name="Session Variable" />
					<set-session-variable variableName="resumen"
						value="#[payload[3]]" doc:name="Session Variable" />
					<set-session-variable variableName="fecha"
						value="#[payload[4]]" doc:name="Session Variable" />
					<set-session-variable variableName="medioCirculacion"
						value="#[payload[5]]" doc:name="Session Variable" />
					<set-session-variable variableName="paginaWeb"
						value="#[payload[6]]" doc:name="Session Variable" />
					<set-session-variable variableName="certificacion"
						value="#[payload[7]]" doc:name="Session Variable" />
					<set-session-variable variableName="categoria"
						value="#[payload[8]]" doc:name="Session Variable" />
					<set-session-variable variableName="clasificado"
						value="#[payload[9]]" doc:name="Session Variable" />
					<db:insert config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[insert into gen_cont_virtual (k_codigo,n_titulo,n_comunidad,n_resumen,
	                        f_fecha,n_medio_circulacion,n_pag_web,b_certificacion,c_categoria,b_clasificado) values(#[codigo],#[titulo],#[comunidad],
	                        #[resumen],#[fecha],#[medioCirculacion],#[paginaWeb],#[certificacion],#[categoria],#[clasificado])]]></db:parameterized-query>
					</db:insert>
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarGeneracionContenidosVirtuales'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigoGrupo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="contenidosVirtuales"
						value="#[payload[1]]" doc:name="Session Variable" />

					<foreach collection="contenidosVirtuales" doc:name="For Each"
						counterVariableName="i" rootMessageVariableName="contenidoVirtual">
						<set-variable variableName="contenidoVirtual"
							value="#[contenidosVirtuales[i-1]]" doc:name="Session Variable" />

						<logger message="#[contenidosVirtuales[i-1].nombre]" level="INFO"
							doc:name="Logger" />

						<db:insert config-ref="MySQL_Configuration"
							autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
							doc:name="Database">
							<db:parameterized-query><![CDATA[insert into gen_cont_virtual (n_titulo,n_comunidad,n_resumen,
	                        f_fecha,n_medio_circulacion,n_pag_web,b_certificacion,c_categoria,b_clasificado) values(#[contenidoVirtual.nombre],#[contenidoVirtual.comunidad],
	                        #[contenidoVirtual.resumen],#[contenidoVirtual.fecha],#[contenidoVirtual.medioCirculacion],#[contenidoVirtual.url],#[contenidoVirtual.certificacion],#[contenidoVirtual.categoria],#[contenidoVirtual.clasificado])]]></db:parameterized-query>
						</db:insert>
						<logger message="#[payload]" level="INFO" doc:name="Logger" />
						<set-variable variableName="codigoContenidoVirtual"
							value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
						<logger
							message="Codigo contenido virtual generado #[codigoContenidoVirtual]"
							level="INFO" doc:name="Logger" />

						<set-variable variableName="autores"
							value="#[contenidosVirtuales[i-1].autores]" doc:name="Variable" />

						<foreach collection="autores" doc:name="For Each"
							counterVariableName="j" rootMessageVariableName="articulo">
							<set-variable variableName="autor" value="#[autores[j-1]]"
								doc:name="Variable" />

							<logger message="#[autor.nombreCompleto]" level="INFO"
								doc:name="Logger" />

							<db:select config-ref="MySQL_Configuration" doc:name="Database">
								<db:parameterized-query><![CDATA[select k_codigo from investigador where n_nombre=#[autor.nombreCompleto]]]></db:parameterized-query>
							</db:select>

							<logger message="#[payload]" level="INFO" doc:name="Logger" />

							<choice doc:name="Choice">
								<when expression="#[payload.size() ==0]">
									<logger message="no existe investigador" level="INFO"
										doc:name="Logger" />
									<db:insert config-ref="MySQL_Configuration"
										autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
										doc:name="Database">
										<db:parameterized-query><![CDATA[insert into investigador (n_nombre) values(#[autor.nombreCompleto])]]></db:parameterized-query>
									</db:insert>

									<set-variable variableName="idAutor"
										value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
								</when>
								<otherwise>
									<logger message="Investigador #[payload] ya existe"
										level="INFO" doc:name="Logger" />

									<set-variable variableName="idAutor"
										value="#[payload[0].k_codigo]" doc:name="Variable" />
								</otherwise>
							</choice>

							<logger message="#[idAutor]" level="INFO" doc:name="Logger" />

							<db:insert config-ref="MySQL_Configuration"
								autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
								doc:name="Database">
								<db:parameterized-query><![CDATA[insert into gen_cont_virtual_autor (i_cod_gen_cont_virtual,i_cod_investigador,i_cod_grupo_investigacion) values(#[codigoContenidoVirtual],#[idAutor],#[codigoGrupo])]]></db:parameterized-query>
							</db:insert>
						</foreach>

						<set-variable variableName="instituciones"
							value="#[contenidosVirtuales[i-1].instituciones]" doc:name="Variable" />

						<foreach collection="instituciones" doc:name="For Each"
							counterVariableName="j" rootMessageVariableName="institucion">
							<set-variable variableName="institucion" value="#[instituciones[j-1]]"
								doc:name="Variable" />

							<logger message="#[institucion.nombre]" level="INFO"
								doc:name="Logger" />

							<db:select config-ref="MySQL_Configuration" doc:name="Database">
								<db:parameterized-query><![CDATA[select k_codigo from entidad where n_nombre=#[institucion.nombreCompleto]]]></db:parameterized-query>
							</db:select>

							<logger message="#[payload]" level="INFO" doc:name="Logger" />

							<choice doc:name="Choice">
								<when expression="#[payload.size() ==0]">
									<logger message="no existe institucion" level="INFO"
										doc:name="Logger" />
									<db:insert config-ref="MySQL_Configuration"
										autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
										doc:name="Database">
										<db:parameterized-query><![CDATA[insert into entidad (n_nombre,b_institucion) values(#[institucion.nombre],1)]]></db:parameterized-query>
									</db:insert>

									<set-variable variableName="idInstitucion"
										value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
								</when>
								<otherwise>
									<logger message="Institucion #[payload] ya existe"
										level="INFO" doc:name="Logger" />

									<set-variable variableName="idInstitucion"
										value="#[payload[0].k_codigo]" doc:name="Variable" />
								</otherwise>
							</choice>

							<logger message="#[idInstitucion]" level="INFO" doc:name="Logger" />

							<db:insert config-ref="MySQL_Configuration"
								autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
								doc:name="Database">
								<db:parameterized-query><![CDATA[insert into gen_cont_virtual_entidad (i_cod_gen_cont_virtual,i_cod_entidad) values(#[codigoContenidoVirtual],#[idInstitucion])]]></db:parameterized-query>
							</db:insert>
						</foreach>

					</foreach>

					<mulexml:object-to-xml-transformer
						doc:name="Object to XML" />
				</processor-chain>
			</when>
		</choice>
	</flow>
</mule>

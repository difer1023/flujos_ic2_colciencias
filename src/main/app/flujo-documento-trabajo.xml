<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.9.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="flujo-documento-trabajo">
		<http:listener config-ref="HTTP_colciencias_Configuration"
			path="/flujoDocumentoTrabajo" doc:name="HTTP" />
		<cxf:jaxws-service doc:name="flujoDocumentoTrabajo"
			service="documentoTrabajoService" serviceClass="co.com.ic2.colciencias.ws.IServiceDocumentoTrabajo" />
		<choice doc:name="Choice">
			<when
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarClasificacionDocumentosTrabajo'"
				evaluator="groovy">
				<processor-chain doc:name="Processor Chain">
				
				<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />
						
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select c_categoria, count(c_categoria) numero from(
						select dt.k_codigo,dt.c_categoria from doc_trabajo dt, 
						doc_trabajo_autor dta 
						where dt.k_codigo=dta.i_cod_doc_trabajo
						and dta.i_cod_grupo_investigacion=#[codigoGrupo]
						group by dt.k_codigo) as documento_trabajo_grupo
						group by c_categoria]]></db:parameterized-query>
					</db:select>
				<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarDocumentoTrabajo'">
				<processor-chain doc:name="Processor Chain">
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from doc_trabajo]]></db:parameterized-query>
					</db:select>
				<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.TransformerDocumentoTrabajo.getDocumentosTrabajo(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarDocumentoTrabajoGrupo'">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from doc_trabajo dt,doc_trabajo_autor dta where dt.k_codigo=dta.i_cod_doc_trabajo and dta.i_cod_grupo_investigacion=#[codigoGrupo]]]></db:parameterized-query>
					</db:select>

					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.TransformerDocumentoTrabajo.getDocumentosTrabajo(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarDocumentoTrabajo'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="titulo"
						value="#[payload[1]]" doc:name="Session Variable" />
					<set-session-variable variableName="ano"
						value="#[payload[2]]" doc:name="Session Variable" />
					<set-session-variable variableName="paginaWeb"
						value="#[payload[3]]" doc:name="Session Variable" />
					<set-session-variable variableName="doi"
						value="#[payload[4]]" doc:name="Session Variable" />
					<set-session-variable variableName="categoria"
						value="#[payload[5]]" doc:name="Session Variable" />
					<set-session-variable variableName="clasificado"
						value="#[payload[6]]" doc:name="Session Variable" />
					<db:insert config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[insert into doc_trabajo (k_codigo,n_titulo,i_ano,n_pag_web,n_doi,
	                        c_categoria,b_clasificado) values(#[codigo],#[titulo],#[ano],#[paginaWeb],#[doi],#[categoria],#[clasificado]])]]></db:parameterized-query>
					</db:insert>
				</processor-chain>
			</when>

			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarDocumentosTrabajo'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigoGrupo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="documentosTrabajo"
						value="#[payload[1]]" doc:name="Session Variable" />
					
					<logger message="#[documentosTrabajo]" level="INFO"
							doc:name="Logger" />
					
					<foreach collection="documentosTrabajo" doc:name="For Each"
						counterVariableName="i" rootMessageVariableName="documentoTrabajo">
						<set-variable variableName="documentoTrabajo"
							value="#[documentosTrabajo[i-1]]" doc:name="Session Variable" />

						<logger message="#[documentosTrabajo[i-1].nombre]" level="INFO"
							doc:name="Logger" />

						<db:insert config-ref="MySQL_Configuration"
							autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
							doc:name="Database">
							<db:parameterized-query><![CDATA[insert into doc_trabajo (n_titulo,i_ano,n_pag_web,n_doi,
	                        c_categoria,b_clasificado) values(#[documentoTrabajo.nombre],#[documentoTrabajo.ano],#[documentoTrabajo.url],#[documentoTrabajo.doi],#[documentoTrabajo.categoria],#[documentoTrabajo.clasificado])]]></db:parameterized-query>
						</db:insert>
						<logger message="#[payload]" level="INFO" doc:name="Logger" />
						<set-variable variableName="codigoDocTrabajo"
							value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
						<logger message="Codigo documento trabajo generado #[codigoDocTrabajo]"
							level="INFO" doc:name="Logger" />
						<!-- Insercion de autores -->
						<set-variable variableName="autores"
							value="#[documentosTrabajo[i-1].autores]" doc:name="Variable" />

						<foreach collection="autores" doc:name="For Each"
							counterVariableName="j" rootMessageVariableName="articulo">
							<set-variable variableName="autor" value="#[autores[j-1]]"
								doc:name="Variable" />

							<logger message="#[autor.nombreCompleto]" level="INFO"
								doc:name="Logger" />

							<db:select config-ref="MySQL_Configuration" doc:name="Database">
								<db:parameterized-query><![CDATA[select k_codigo from investigador where n_nombre=#[autor.nombreCompleto]]]></db:parameterized-query>
							</db:select>

							<logger message="#[payload]" level="INFO" doc:name="Logger" />

							<choice doc:name="Choice">
								<when expression="#[payload.size() ==0]">
									<logger message="no existe investigador" level="INFO"
										doc:name="Logger" />
									<db:insert config-ref="MySQL_Configuration"
										autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
										doc:name="Database">
										<db:parameterized-query><![CDATA[insert into investigador (n_nombre) values(#[autor.nombreCompleto])]]></db:parameterized-query>
									</db:insert>

									<set-variable variableName="idAutor"
										value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
								</when>
								<otherwise>
									<logger message="Investigador #[payload] ya existe"
										level="INFO" doc:name="Logger" />

									<set-variable variableName="idAutor"
										value="#[payload[0].k_codigo]" doc:name="Variable" />
								</otherwise>
							</choice>

							<logger message="#[idAutor]" level="INFO" doc:name="Logger" />

							<db:insert config-ref="MySQL_Configuration"
								autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
								doc:name="Database">
								<db:parameterized-query><![CDATA[insert into doc_trabajo_autor (i_cod_doc_trabajo,i_cod_investigador,i_cod_grupo_investigacion) values(#[codigoDocTrabajo],#[idAutor],#[codigoGrupo])]]></db:parameterized-query>
							</db:insert>
						</foreach>

						<!-- Insercion de instituciones -->

						<set-variable variableName="instituciones"
							value="#[documentosTrabajo[i-1].instituciones]" doc:name="Variable" />

						<foreach collection="instituciones" doc:name="For Each"
							counterVariableName="j" rootMessageVariableName="institucion">
							<set-variable variableName="institucion" value="#[instituciones[j-1]]"
								doc:name="Variable" />

							<logger message="#[institucion.nombre]" level="INFO"
								doc:name="Logger" />

							<db:select config-ref="MySQL_Configuration" doc:name="Database">
								<db:parameterized-query><![CDATA[select k_codigo from entidad where n_nombre=#[institucion.nombre]]]></db:parameterized-query>
							</db:select>

							<logger message="#[payload]" level="INFO" doc:name="Logger" />

							<choice doc:name="Choice">
								<when expression="#[payload.size() ==0]">
									<logger message="no existe investigador" level="INFO"
										doc:name="Logger" />
									<db:insert config-ref="MySQL_Configuration"
										autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
										doc:name="Database">
										<db:parameterized-query><![CDATA[insert into entidad (n_nombre,b_institucion) values(#[institucion.nombre],1)]]></db:parameterized-query>
									</db:insert>

									<set-variable variableName="idEntidad"
										value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
								</when>
								<otherwise>
									<logger message="Investigador #[payload] ya existe"
										level="INFO" doc:name="Logger" />

									<set-variable variableName="idEntidad"
										value="#[payload[0].k_codigo]" doc:name="Variable" />
								</otherwise>
							</choice>

							<logger message="#[idEntidad]" level="INFO" doc:name="Logger" />

							<db:insert config-ref="MySQL_Configuration"
								autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
								doc:name="Database">
								<db:parameterized-query><![CDATA[insert into doc_trabajo_entidad (i_cod_doc_trabajo,i_cod_entidad) values(#[codigoDocTrabajo],#[idEntidad])]]></db:parameterized-query>
							</db:insert>
						</foreach>

					</foreach>

				<mulexml:object-to-xml-transformer
					doc:name="Object to XML" />

				</processor-chain>
			</when>
		</choice>
	</flow>
</mule>

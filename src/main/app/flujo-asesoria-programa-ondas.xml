<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.9.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="flujo-asesoria-programa-ondas">
		<http:listener config-ref="HTTP_colciencias_Configuration"
			path="/flujoAsesoriaProgramaOndas" doc:name="HTTP" />
		<cxf:jaxws-service doc:name="flujoAsesoriaProgramaOndas"
			service="asesoriaProgramaOndasService" serviceClass="co.com.ic2.colciencias.ws.IServiceAsesoriaProgramaOndas" />
		<choice doc:name="Choice">
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarAsesoriasProgramaOndas'">
				<processor-chain doc:name="Processor Chain">
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from programa_ondas]]></db:parameterized-query>
					</db:select>
				<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.TransformerAsesoriaProgramaOndas.getAsesoriasProgramaOndas(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarAsesoriasProgramaOndasGrupo'">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from programa_ondas where i_cod_grupo_investigacion=#[codigoGrupo]]]></db:parameterized-query>
					</db:select>

					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.TransformerAsesoriaProgramaOndas.getAsesoriasProgramaOndas(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarAsesoriaProgramaOndas'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="nombre"
						value="#[payload[1]]" doc:name="Session Variable" />
					<set-session-variable variableName="registroBD"
						value="#[payload[2]]" doc:name="Session Variable" />
					<set-session-variable variableName="institucion"
						value="#[payload[3]]" doc:name="Session Variable" />
					<set-session-variable variableName="municipio"
						value="#[payload[4]]" doc:name="Session Variable" />
					<set-session-variable variableName="departamento"
						value="#[payload[5]]" doc:name="Session Variable" />
					<set-session-variable variableName="resultados"
						value="#[payload[6]]" doc:name="Session Variable" />
					<set-session-variable variableName="reconocido"
						value="#[payload[7]]" doc:name="Session Variable" />
					<set-session-variable variableName="participacionFerias"
						value="#[payload[8]]" doc:name="Session Variable" />
					<set-session-variable variableName="categoria"
						value="#[payload[9]]" doc:name="Session Variable" />
					<set-session-variable variableName="clasificado"
						value="#[payload[10]]" doc:name="Session Variable" />
					<db:insert config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[insert into programa_ondas (k_codigo,n_nombre,b_registro_BD,n_institucion,
	                        i_municipio,i_departamento,b_resultados,b_reconocido,b_participacion_ferias,c_categoria,b_clasificado) values(#[codigo],
	                        #[nombre],#[registroBD],#[institucion],#[municipio],#[departamento],#[resultados],
	                        #[reconocido],#[participacionFerias],#[categoria],#[clasificado]])]]></db:parameterized-query>
					</db:insert>
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarAsesoriasProgramaOndas'">
				<processor-chain doc:name="Processor Chain">
					<set-session-variable variableName="codigoGrupo"
						value="#[payload[0]]" doc:name="Session Variable" />
					<set-session-variable variableName="asesoriasProgramaOndas"
						value="#[payload[1]]" doc:name="Session Variable" />

					<foreach collection="asesoriasProgramaOndas" doc:name="For Each"
						counterVariableName="i" rootMessageVariableName="articulo">
						<set-variable variableName="asesoriaProgramaOndas"
							value="#[asesoriasProgramaOndas[i-1]]" doc:name="Session Variable" />

						<db:select config-ref="MySQL_Configuration" doc:name="Database">
							<db:parameterized-query><![CDATA[select k_codigo from entidad where n_nombre=#[asesoriaProgramaOndas.institucion]]]></db:parameterized-query>
						</db:select>

						<logger message="#[payload]" level="INFO" doc:name="Logger" />

						<choice doc:name="Choice">
							<when expression="#[payload.size() ==0]">
								<logger message="no existe institucion" level="INFO"
									doc:name="Logger" />
								<db:insert config-ref="MySQL_Configuration"
									autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
									doc:name="Database">
									<db:parameterized-query><![CDATA[insert into entidad (n_nombre,b_institucion) values(#[asesoriaProgramaOndas.institucion],1)]]></db:parameterized-query>
								</db:insert>

								<set-variable variableName="idInstitucion"
									value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
							</when>
							<otherwise>
								<logger message="Entidad #[payload] ya existe"
									level="INFO" doc:name="Logger" />

								<set-variable variableName="idInstitucion" value="#[payload[0].k_codigo]"
									doc:name="Variable" />
							</otherwise>
						</choice>

						<db:insert config-ref="MySQL_Configuration"
							autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
							doc:name="Database">
							<db:parameterized-query><![CDATA[insert into programa_ondas (n_nombre,b_registro_BD,i_institucion,i_municipio,i_departamento,b_resultados,b_reconocido,b_participacion_ferias,c_categoria,b_clasificado)
							 values(#[asesoriaProgramaOndas.nombre],#[asesoriaProgramaOndas.registroBD],#[idInstitucion],(select k_codigo from municipio where n_nombre=#[asesoriaProgramaOndas.municipio]),(select k_codigo from departamento where n_nombre=#[asesoriaProgramaOndas.departamento]),#[asesoriaProgramaOndas.resultados],#[asesoriaProgramaOndas.reconocido],#[asesoriaProgramaOndas.participacion],#[asesoriaProgramaOndas.categoria],#[asesoriaProgramaOndas.clasificado])]]></db:parameterized-query>
						</db:insert>
						<logger message="#[payload]" level="INFO" doc:name="Logger" />
						<set-variable variableName="codigoProgramaOndas"
							value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
						<logger
							message="Codigo programa ondas generado #[codigoProgramaOndas]"
							level="INFO" doc:name="Logger" />

						<db:insert config-ref="MySQL_Configuration"
							autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
							doc:name="Database">
							<db:parameterized-query><![CDATA[insert into programa_ondas_grupo (i_cod_programa_ondas,i_cod_grupo_investigacion)
							 values(#[codigoProgramaOndas],#[codigoGrupo])]]></db:parameterized-query>
						</db:insert>

					</foreach>
				</processor-chain>
			</when>
		</choice>
	</flow>
</mule>

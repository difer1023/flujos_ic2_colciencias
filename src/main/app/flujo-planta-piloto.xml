<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.9.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

<flow name="flujo-planta-piloto">
        <http:listener config-ref="HTTP_colciencias_Configuration" path="/flujoPlantaPiloto" doc:name="HTTP"/>
        <cxf:jaxws-service  doc:name="flujoPlantaPiloto"  service="plantaPilotoService" serviceClass="co.com.ic2.colciencias.ws.IServicePlantaPiloto"/>
        <choice doc:name="Choice">
        	<when
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarClasificacionPlantasPiloto'"
				evaluator="groovy">
				<processor-chain doc:name="Processor Chain">
				
				<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />
						
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select c_categoria, count(c_categoria) numero from(
						select pp.k_codigo,pp.c_categoria from planta_piloto pp, 
						planta_piloto_autor ppa
						where pp.k_codigo=ppa.i_cod_planta_piloto
						and ppa.i_cod_grupo_investigacion=#[codigoGrupo]
						group by pp.k_codigo) as planta_piloto_grupo
						group by c_categoria]]></db:parameterized-query>
					</db:select>
				<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
            <when evaluator="groovy"  expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarPlantasPiloto'">
	                <processor-chain doc:name="Processor Chain">
	                    <db:select config-ref="MySQL_Configuration" doc:name="Database">
	                        <db:parameterized-query><![CDATA[select * from planta_piloto]]></db:parameterized-query>
	                    </db:select>
	                <json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.TransformerPlantaPiloto.getPlantasPiloto(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
			<when evaluator="groovy"
				expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'consultarPlantasPilotoGrupo'">
				<processor-chain doc:name="Processor Chain">

					<set-session-variable variableName="codigoGrupo"
						value="#[payload]" doc:name="Session Variable" />

					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query><![CDATA[select * from planta_piloto pp, planta_piloto_autor ppa where pp.k_codigo=ppa.i_cod_planta_piloto and ppa.i_cod_grupo_investigacion=#[codigoGrupo]]]></db:parameterized-query>
					</db:select>

					<json:object-to-json-transformer
						doc:name="Object to JSON" />
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
					<scripting:component doc:name="Groovy">
						<scripting:script engine="Groovy"><![CDATA[co.com.ic2.transformers.TransformerPlantaPiloto.getPlantasPiloto(payload)]]></scripting:script>
					</scripting:component>
					<logger message="#[payload]" level="INFO" doc:name="Logger" />
				</processor-chain>
			</when>
            <when evaluator="groovy"  expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarPlantaPiloto'">
	                <processor-chain doc:name="Processor Chain">
	                <set-session-variable variableName="codigo" value="#[payload[0]]" doc:name="Session Variable"/>
	                <set-session-variable variableName="nombre" value="#[payload[1]]" doc:name="Session Variable"/>
	                <set-session-variable variableName="fecha" value="#[payload[2]]" doc:name="Session Variable"/>
	                <set-session-variable variableName="institucionFinanciadora" value="#[payload[3]]" doc:name="Session Variable"/>
	                <set-session-variable variableName="copiaContrato" value="#[payload[4]]" doc:name="Session Variable"/>
	                <set-session-variable variableName="paisElaboracion" value="#[payload[5]]" doc:name="Session Variable"/>
	               	<set-session-variable variableName="categoria" value="#[payload[6]]" doc:name="Session Variable"/>
	                <set-session-variable variableName="clasificado" value="#[payload[7]]" doc:name="Session Variable"/>
	                    <db:insert config-ref="MySQL_Configuration" doc:name="Database">
	                        <db:parameterized-query><![CDATA[insert into planta_piloto (k_codigo,n_nombre,i_fecha,i_institucion_financiadora,
	                        b_copia_contrato,i_pais_elaboracion,c_categoria,b_clasificado) values(#[codigo],#[nombre],#[fecha],#[institucionFinanciadora],
	                        #[copiaContrato],#[paisElaboracion],#[categoria],#[clasificado])]]></db:parameterized-query>
	                    </db:insert>
	                </processor-chain>
            </when>
            <when evaluator="groovy"  expression="message.getInvocationProperty('cxf_operation').getLocalPart() == 'insertarPlantasPilotos'">
	                <processor-chain doc:name="Processor Chain">
		                <set-session-variable variableName="codigoGrupo" value="#[payload[0]]" doc:name="Session Variable"/>
		                <set-session-variable variableName="plantasPiloto" value="#[payload[1]]" doc:name="Session Variable"/>
	                
	                	<foreach collection="plantasPiloto" doc:name="For Each"
							counterVariableName="i" rootMessageVariableName="plantaPiloto">
							<set-variable variableName="plantaPiloto" value="#[plantasPiloto[i-1]]"
								doc:name="Session Variable" />
								
							<logger message="#[plantasPiloto[i-1].nombre]" level="INFO"
								doc:name="Logger" />
	
							<set-variable variableName="institucion" value="#[plantasPiloto[i-1].institucion]"
								doc:name="Variable" />

							<logger message="#[institucion]" level="INFO"
								doc:name="Logger" />

							<db:select config-ref="MySQL_Configuration" doc:name="Database">
								<db:parameterized-query><![CDATA[select k_codigo from entidad where n_nombre=#[institucion]]]></db:parameterized-query>
							</db:select>

							<logger message="#[payload]" level="INFO" doc:name="Logger" />

							<choice doc:name="Choice">
								<when expression="#[payload.size() ==0]">
									<logger message="no existe institucion" level="INFO"
										doc:name="Logger" />
									<db:insert config-ref="MySQL_Configuration"
										autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
										doc:name="Database">
										<db:parameterized-query><![CDATA[insert into entidad (n_nombre,b_institucion) values(#[institucion],1)]]></db:parameterized-query>
									</db:insert>

									<set-variable variableName="idInstitucion"
										value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
								</when>
								<otherwise>
									<logger message="Institucion #[payload] ya existe"
										level="INFO" doc:name="Logger" />

									<set-variable variableName="idInstitucion"
										value="#[payload[0].k_codigo]" doc:name="Variable" />
								</otherwise>
							</choice>

							<logger message="#[idInstitucion]" level="INFO" doc:name="Logger" />
	
							<db:insert config-ref="MySQL_Configuration"
								autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
								doc:name="Database">
								<db:parameterized-query><![CDATA[insert into planta_piloto(n_nombre,f_fecha,i_institucion_financiadora,b_copia_contrato,i_pais_elaboracion,c_categoria,b_clasificado) 
								values(#[plantaPiloto.nombre],#[plantaPiloto.fecha],#[idInstitucion],#[plantaPiloto.copiaContrato],(select k_codigo from pais where n_nombre=#[plantaPiloto.pais]),#[plantaPiloto.categoria],#[plantaPiloto.clasificado])]]></db:parameterized-query>
							</db:insert>
							<logger message="#[payload]" level="INFO" doc:name="Logger" />
							<set-variable variableName="codigoPlantaPiloto"
								value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
							<logger message="Codigo planta piloto generado #[codigoPlantaPiloto]"
								level="INFO" doc:name="Logger" />
	
							<set-variable variableName="autores"
								value="#[plantasPiloto[i-1].autores]" doc:name="Variable" />
	
							<foreach collection="autores" doc:name="For Each"
								counterVariableName="j" rootMessageVariableName="articulo">
								<set-variable variableName="autor" value="#[autores[j-1]]"
									doc:name="Variable" />
	
								<logger message="#[autor.nombreCompleto]" level="INFO"
									doc:name="Logger" />
	
								<db:select config-ref="MySQL_Configuration" doc:name="Database">
									<db:parameterized-query><![CDATA[select k_codigo from investigador where n_nombre=#[autor.nombreCompleto]]]></db:parameterized-query>
								</db:select>
	
								<logger message="#[payload]" level="INFO" doc:name="Logger" />
	
								<choice doc:name="Choice">
									<when expression="#[payload.size() ==0]">
										<logger message="no existe investigador" level="INFO"
											doc:name="Logger" />
										<db:insert config-ref="MySQL_Configuration"
											autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
											doc:name="Database">
											<db:parameterized-query><![CDATA[insert into investigador (n_nombre) values(#[autor.nombreCompleto])]]></db:parameterized-query>
										</db:insert>
	
										<set-variable variableName="idAutor"
											value="#[payload[0].GENERATED_KEY]" doc:name="Variable" />
									</when>
									<otherwise>
										<logger message="Investigador #[payload] ya existe"
											level="INFO" doc:name="Logger" />
	
										<set-variable variableName="idAutor"
											value="#[payload[0].k_codigo]" doc:name="Variable" />
									</otherwise>
								</choice>
	
								<logger message="#[idAutor]" level="INFO" doc:name="Logger" />
	
								<db:insert config-ref="MySQL_Configuration"
									autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
									doc:name="Database">
									<db:parameterized-query><![CDATA[insert into planta_piloto_autor (i_cod_planta_piloto,i_cod_investigador,i_cod_grupo_investigacion,i_integrante_grupo,i_grupos_colaboracion) values(#[codigoPlantaPiloto],#[idAutor],#[codigoGrupo],#[autor.integranteGrupo],#[autor.gruposColaboracion])]]></db:parameterized-query>
								</db:insert>
							</foreach>
	
						</foreach>
		                <mulexml:object-to-xml-transformer
						doc:name="Object to XML" />
	                
	                </processor-chain>
            </when>
        </choice>
    </flow>
</mule>
